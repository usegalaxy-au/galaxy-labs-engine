name: Django tests

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  DJANGO_SECRET_KEY: secret
  HOSTNAME: 127.0.0.1:8000
  MAIL_FROM_ADDRESS: galaxy-no-reply@usegalaxy.org.au
  MAIL_TO_ADDRESS: help@genome.edu.au
  MAIL_USE_TLS: true
  MAIL_HOSTNAME: smtp.mailtrap.io
  MAIL_SMTP_PORT: 2525
  MAIL_SMTP_USERNAME: ""
  MAIL_SMTP_PASSWORD: ""
  RECAPTCHA_SITE_KEY: ""
  RECAPTCHA_SECRET_KEY: ""

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}

    - name: Check if event is a push to PR branch
      id: check_event
      run: |
        if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.head_ref }}" != "" ]; then
          echo "Skipping duplicate workflow run for push to PR branch."
          exit 78  # Exit with neutral status to mark as skipped
        fi

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
      if: success()

    - name: Install Dependencies
      if: success()
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      if: success()
      run: |
        cd app && python manage.py test

  create-deployment-diff:
    runs-on: ubuntu-latest
    needs: run-tests
    if: github.event_name == 'push'

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        fetch-depth: 2

    - name: Create diff for deployment check
      run: |
        # Get the previous commit to compare against
        if git rev-parse HEAD~1 >/dev/null 2>&1; then
          PREV_COMMIT=$(git rev-parse HEAD~1)
          echo "Creating diff between $PREV_COMMIT and HEAD"
          
          # Create diff of changed files
          git diff --name-only $PREV_COMMIT HEAD > changed_files.txt
          
          # Check specifically for Dockerfile or requirements.txt changes
          if git diff --name-only $PREV_COMMIT HEAD | grep -q -e 'Dockerfile' -e 'requirements.txt'; then
            echo "true" > dockerfile_or_requirements_changed.txt
          else
            echo "false" > dockerfile_or_requirements_changed.txt
          fi
        else
          echo "No previous commit found, assuming all files changed"
          git ls-files > changed_files.txt
          
          # Check if Dockerfile or requirements.txt exist
          if ls Dockerfile requirements.txt >/dev/null 2>&1; then
            echo "true" > dockerfile_or_requirements_changed.txt
          else
            echo "false" > dockerfile_or_requirements_changed.txt
          fi
        fi
        
        echo "Changed files:"
        cat changed_files.txt
        echo "Dockerfile/requirements changed:"
        cat dockerfile_or_requirements_changed.txt

    - name: Upload diff artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deployment-diff-${{ github.sha }}
        path: |
          changed_files.txt
          dockerfile_or_requirements_changed.txt
        retention-days: 1
