id: section_1
title: Creating your content
tabs:
  - id: faq
    title: FAQs
    heading_md: |
      Some common questions about creating content for a Galaxy Lab page.
    content:
      - title_md: Why isn't my Lab page updating!?
        description_md: |
          <p class="lead text-bf">A note on caching</p>
          <p>
            When making changes to your Lab content, you may notice that updates are not immediate. This is because of caching, which is used to speed up page loading time. There are two levels of caching to keep in mind:
          </p>
          <ul>
            <li>
              The Labs Engine caches Lab content forever, unless a request is made with the <code>cache=false</code> parameter. When you are developing your Lab page, use this parameter to see your changes immediately, for example:
              <a href="">http://{{ HOSTNAME }}/?content_root=https://github.com/myusername/myrepo/blob/branch/content/base.yml&cache=false</a>
            </li>
            <li>
              Using the <code>cache=false</code> parameter will refresh the cache.
              <!--
              This happens automatically on every pull request to the
              <a href="https://github.com/galaxyproject/galaxy_codex">
                Galaxy Codex
              </a>
              repository, where global Labs content is stored.
                -->
            </li>
            <li>
              When making changes to your Lab content, you may notice that updates are not immediate, because GitHub raw content is cached for 5 minutes.
            </li>
            <li>
              Caching is automatically disabled if you choose to
              <a
                href="#"
                data-bs-toggle="collapse"
                data-bs-target="#section_1-faq-2-collapse"
                aria-expanded="true"
                aria-controls="section_1-faq-2-collapse"
                onclick="document.getElementById('section_1-faq-2-collapse').scrollIntoView();"
              >render locally</a>!
            </li>
          </ul>

      - title_md: Can I render my page locally?
        description_md: |
          Yes, rendering your lab page locally makes for much faster debugging
          and polishing! To render your page locally, you will need to install
          the Galaxy Labs Engine CLI (requires `python>=3.10`):

          <div class="tab-content">
            <ul class="nav nav-tabs" id="installLabsEngine" role="tablist">
              <li class="nav-item" role="presentation">
                <button class="nav-link active" id="windows-tab" data-bs-toggle="tab" data-bs-target="#windows" type="button" role="tab" aria-controls="windows" aria-selected="true">Windows</button>
              </li>
              <li class="nav-item" role="presentation">
                <button class="nav-link" id="mac-linux-tab" data-bs-toggle="tab" data-bs-target="#mac-linux" type="button" role="tab" aria-controls="mac-linux" aria-selected="false">Mac/Linux</button>
              </li>
            </ul>
            <div class="tab-content" id="installLabsEngineContent">
              <div class="tab-pane fade show active" id="windows" role="tabpanel" aria-labelledby="windows-tab">
                <pre class="prettyprint">
                  # create a virtual environment
                  # (alternatively, you may also wish to use conda for a global environment)
                  py -m venv venv
                  venv\Scripts\activate

                  # install the Labs Engine
                  pip install git+https://github.com/usegalaxy-au/galaxy-labs-engine.git

                  # Navigate to your content directory
                  cd %MY_CONTENT_DIR%

                  # serve base.yml in the current directory
                  labs-engine serve

                  # serve a specific page from the current directory
                  labs-engine serve usegalaxy.org.yml

                  # upgrade to the latest version (in future)
                  pip install --force-reinstall git+https://github.com/usegalaxy-au/galaxy-labs-engine.git
                </pre>
              </div>
              <div class="tab-pane fade" id="mac-linux" role="tabpanel" aria-labelledby="mac-linux-tab">
                <pre class="prettyprint">
                  # create a virtual environment
                  python -m venv venv
                  source venv/bin/activate

                  # install the Labs Engine
                  pip install git+https://github.com/usegalaxy-au/galaxy-labs-engine.git

                  # Navigate to your content directory
                  cd $MY_CONTENT_DIR

                  # serve base.yml in the current directory
                  labs-engine serve

                  # serve a specific page from the current directory
                  labs-engine serve usegalaxy.org.yml

                  # upgrade to the latest version (in future)
                  pip install --force-reinstall git+https://github.com/usegalaxy-au/galaxy-labs-engine.git
                </pre>
              </div>
            </div>
          </div>

          This should start a local development server on `http://127.0.0.1:8000`.
          Click the link that appears and your lab page should open in the browser.

      - title_md: Can I write content in HTML?
        description_md: |
          Yes - any file/field that accepts markdown can also accept HTML,
          for example:

          - `intro.md`
          - `heading_md` (in section.yml)

          However, be careful about nesting HTML within markdown. Anything inside
          an HTML element must also be HTML. The following would be invalid:

          <pre class="prettyprint">
          &lt;p&gt;
            This is a paragraph with a
            [broken link](https://example.com).
          &lt;/p&gt;
          </pre>

      - title_md: Can I use variables in my content?
        description_md: |
          Yes! Using variables is a great way to make a Lab page reuable across
          Galaxy servers.
          Variables defined in the `base.yml`/`<server>.yml` file can be used anywhere
          that markdown or HTML content is provided. This includes templates like
          `intro.md` and also `section.yml` & `*_md` values. Any arbitrary variable
          that you set in the `base.yml`/`<server>.yml` file can be used in the content:

          1. `base.yml` or `<server>.yml`:
            <pre class="prettyprint lang-yaml">
            myvar: foo
            </pre>

          2. `intro.md`:
            <pre class="code">
            &#35; Analysis methods
            This is a great place for doing analysis such as &lbrace;&lbrace; myvar &rbrace;&rbrace;.
            </pre>

          3. `section_1.yml`:
            <pre class="prettyprint lang-yaml">
            ...
            &ndash; title_md: Can I use variables in my YAML and Markdown/HTML content?
              description_md: |
                Yes, you can use variables like &lbrace;&lbrace; myvar &rbrace;&rbrace;.
            </pre>

      - title_md: How to add links to tools/workflows?
        description_md: |
          To add Galaxy server links (e.g. any link to a usegalaxy.* site), you can use the `<server>.yml` variable `galaxy_base_url` to build a URL that always points to the Galaxy server that the Lab is being viewed on.

          ##### Linking to tools

          For creating tool URLs in either markdown, HTML or YAML, just copy the URL while you have the tool open in Galaxy, and replace the base URL with `galaxy_base_url` like so:

          <pre class="prettyprint">
          # Either of these work fine:
          &lbrace;&lbrace; galaxy_base_url }}/?tool_id=toolshed.g2.bx.psu.edu/repos/iuc/fastqc/fastqc
          &lbrace;&lbrace; galaxy_base_url }}/?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fdevteam%2Ffastqc%2Ffastqc
          </pre>

          <p class="alert alert-warning">
            Make sure you remove the version from the end of the URL! This ensures that the user is always directed to the latest version of the tool.
          </p>

          ##### Linking to workflows

          For linking to a workflow, it's best to link to a TRS import from either WorkflowHub.eu or DockStore.org to ensure availability between Galaxy instances. You should be able to obtain the TRS ID from the workflow page on either of these sites:

          <pre class="prettyprint">
          &lbrace;&lbrace; galaxy_base_url }}/workflows/trs_import?trs_server=workflowhub.eu&run_form=true&trs_id=220
          </pre>

      - title_md: Can I exclude an item from specific hosts?
        description_md: |
          Yes, you can exclude any component in the section schema from specific
          hosts by listing server names under the
          [exclude_from directive](/schema#tabitem). The server name is just the
          base name of the `<server>.yml` file.
          This can be used to exclude items describing server-specific features,
          such as:

          <pre class="prettyprint lang-yaml">
          - title_md: How can I increase my storage quota?
            description_md: >
              Please submit a quota request if your Galaxy  account reaches its
              data storage limit. Requests are usually provisioned quickly if you
              provide a reasonable use case for your request.
            exclude_from:
              - usegalaxy.org  # matches the usegalaxy.org.yml content root
          </pre>

      - title_md: Can I add images into Markdown/HTML?
        description_md: |
          Yes, you can use standard Markdown or HTML syntax to include images.
          When adding the `src` atrribute to an image tag, you can use relative
          URLs to specify an image located in your content directory, or an
          absolute URL to an image hosted elsewhere on the web:

          Using Markdown:
          <pre class="code">
          ![My image description](./static/images/myimage.png)
          </pre>

          Using HTML (allows custom styling):
          <pre class="code">
          &#60;img src="&period;/static/images/myimage.png" alt="My image description" width="200" height="200"&#62;
          </pre>

          Or with a full URL (any image available online):
          <pre class="code">
          ![My image description](https://example.com/myimage.png)
          </pre>

      - title_md: How do I list contributors to my Galaxy Lab?
        description_md: |
          You can list contributors to your Galaxy Lab by adding a `CONTRIBUTORS`
          file to your content directory. This file should be a plain-text
          list of GitHub usernames - one per line. The Labs engine will fetch
          the user's profile information and display it at the bottom of your
          Lab Page. If a contributor does not have a GitHub account, you can
          just add their name.

  - id: another_tab
    title: Another tab
    heading_md: |
      Some more content to demonstrate multiple tabs in a section.
      If you want to have a tab with just Markdown/HTML content and no
      expandable items, you can just use the `heading_md` field and set
      `content: []` like we have done here.
    content: []
